#configure database access to postgreSQL/PostGIS Database
spring.datasource.driverClassName=org.postgresql.Driver
#JDBC Connection string. format: jdbc:postgresql://<host>:<port>/<database>
spring.datasource.url=jdbc:postgresql://localhost:5432/change_detect_demo
spring.datasource.username=postgres
spring.datasource.password=secret

#Configure logging
#uncomment this to configure logging to a file
#logging.file=logicaldecoding.log
#Setting log Levels
#logging.level.org.springframework.web=DEBUG
#logging.level.de.swm.nis.logicaldecoding=DEBUG

#Name of the Replication Slot to fetch changes from
postgresql.replicationSlotName=repslot_test
#EPSG-code of the Spatial Reference System used in your Database (no Support for mixed SRIDS)
postgresql.epsgCode=4326

#number of changes to fetch during one run of the refresh task
scheduling.numChangesToFetch=200
#time to wait after completion of the last refresh task in milliseconds
scheduling.interval=10000
#changes in these schemata are considered to be relevant
#changes in all other schemata are ignored.
filter.includeSchema=data

#GeoWebCache Base Configuration
#Module active?
gwc.doSeed=false
#Path to base URL of GeowebCache's REST API
gwc.rest.baseurl=http://localhost:8081/geoserver/gwc/rest/
gwc.username=admin
gwc.password=geoserver
#GWC Seeding options
gwc.layername=spielwiese:landkreis_neu
gwc.zoomstop=5
gwc.zoomstart=0
gwc.operation=truncate
gwc.threadcount=1
gwc.imageformat=image/png


#configure schema and tablename for postGIS table displaying change bounds
#Module active?
tracktable.doPublish=true
tracktable.schemaname=metadata
tracktable.tablename=changeset
# configure which columns of the original tables should appear in the tracktable metainfo column.
# matches begin and end of column names
tracktable.metainfo.searchpatterns=_id,bearbeiter,beginndatum
